<Window x:Class="TreeViewExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TreeViewExample"
        xmlns:model="clr-namespace:TreeViewExample.Model"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="450"
        Width="246.588">
    <Window.Resources>
        <local:PersonSubitemConverter x:Key="PersonSubitemConverter"></local:PersonSubitemConverter>
    </Window.Resources>

    <!-- Example-Source: https://andydunkel.net/2019/10/10/wpf-treeview-unterschiedliche-subknoten-ein-erweitertes-beispiel/ -->
    
    <Grid>
        <TreeView x:Name="TreeView"
                  ItemsSource="{Binding Persons}">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type model:Person}">
                   
                    <!-- Die Herausforderung ist die Darstellung der beiden Unterlisten. Legen wir zuerst mit den Hauptelementen los, dazu legen wir ein “HierarchicalDataTemplate” an, welches uns den Namen und das Alter ausgibt. -->
                    <TextBlock>
                        <Run Text="{Binding Name}"></Run>
                        <Run Text="("></Run>
                        <Run Text="{Binding Age}"></Run>
                        <Run Text=")"></Run>
                    </TextBlock>

                    <!-- Soweit so unspannend. Nun geht es darum die beiden Unterlisten anzuzeigen und in Ordner einzusortieren. Um mehrere verschiedene Unterlisten anzubinden, hilft uns ein MultiBinding: -->
                    <HierarchicalDataTemplate.ItemsSource>
                        <MultiBinding Converter="{StaticResource PersonSubitemConverter}">
                            <Binding Path="FavoriteBeers"></Binding>
                            <Binding Path="FavoriteBooks"></Binding>
                        </MultiBinding>
                    </HierarchicalDataTemplate.ItemsSource>
                </HierarchicalDataTemplate>

                <!-- Das “FolderItem” dient der Einsortierung der Listenelemente in einen Unterknoten in den TreeView. Dazu müssen wir nun noch ein Template im Xaml-Code einfügen. -->
                <HierarchicalDataTemplate DataType="{x:Type model:FolderItem}" ItemsSource="{Binding Path=Items}">
                    <TextBlock Text="{Binding Path=Name}" />
                </HierarchicalDataTemplate>

                <!-- Damit sind wir fast am Ziel, es fehlen nur noch die DataTemplates für die Darstellung der Unterknoten. -->
                <HierarchicalDataTemplate DataType="{x:Type model:Beer}">
                    <TextBlock>
                        <Run Text="{Binding Name}"></Run>
                        <Run Text=" - "></Run>
                        <Run Text="{Binding Alcolhol}"></Run>
                    </TextBlock>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate DataType="{x:Type model:Book}">
                    <TextBlock>
                        <Run Text="{Binding Name}"></Run>
                        <Run Text=" - "></Run>
                        <Run Text="{Binding Isbn}"></Run>
                    </TextBlock>
                </HierarchicalDataTemplate>


            </TreeView.Resources>
        </TreeView>
    </Grid>
</Window>
